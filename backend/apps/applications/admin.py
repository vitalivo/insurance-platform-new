from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils.safestring import mark_safe
from .models import Application, ApplicationStatus

@admin.register(ApplicationStatus)
class ApplicationStatusAdmin(admin.ModelAdmin):
    list_display = ['name', 'color_display', 'is_final', 'sort_order']
    list_editable = ['sort_order']
    list_filter = ['is_final']
    ordering = ['sort_order']
    
    def color_display(self, obj):
        return format_html(
            '<div style="width: 20px; height: 20px; background-color: {}; border-radius: 3px; display: inline-block;"></div>',
            obj.color
        )
    color_display.short_description = '–¶–≤–µ—Ç'

@admin.register(Application)
class ApplicationAdmin(admin.ModelAdmin):
    list_display = [
        'application_number', 'full_name', 'product', 'status_display', 
        'created_at', 'notifications_status', 'admin_actions'
    ]
    list_filter = ['status', 'product', 'created_at', 'notifications_sent']
    search_fields = ['application_number', 'full_name', 'phone', 'email']
    readonly_fields = [
        'application_number', 'created_at', 'updated_at', 
        'notifications_sent', 'client_notified', 'admin_notified'
    ]
    ordering = ['-created_at']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('application_number', 'product', 'status', 'created_at')
        }),
        ('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞', {
            'fields': ('full_name', 'phone', 'email')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', {
            'fields': ('form_data',),
            'classes': ('collapse',)
        }),
        ('–û–±—Ä–∞–±–æ—Ç–∫–∞', {
            'fields': ('admin_comment', 'processed_at')
        }),
        ('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', {
            'fields': ('notifications_sent', 'client_notified', 'admin_notified'),
            'classes': ('collapse',)
        }),
    )
    
    def status_display(self, obj):
        return format_html(
            '<span style="color: {}; font-weight: bold;">‚óè</span> {}',
            obj.status.color,
            obj.status.name
        )
    status_display.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def notifications_status(self, obj):
        icons = []
        if obj.client_notified:
            icons.append('<span style="color: green;" title="–ö–ª–∏–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω">üìß</span>')
        if obj.admin_notified:
            icons.append('<span style="color: blue;" title="–ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω">üì±</span>')
        if obj.notifications_sent:
            icons.append('<span style="color: green;" title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã">‚úÖ</span>')
        
        return mark_safe(' '.join(icons)) if icons else '‚ùå'
    notifications_status.short_description = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
    
    def admin_actions(self, obj):
        return format_html(
            '<a href="{}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</a>',
            reverse('admin:resend_notifications', args=[obj.pk])
        )
    admin_actions.short_description = '–î–µ–π—Å—Ç–≤–∏—è'
    
    def save_model(self, request, obj, form, change):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞"""
        if change:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            old_obj = Application.objects.get(pk=obj.pk)
            old_status = old_obj.status
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç
            super().save_model(request, obj, form, change)
            
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if old_status != obj.status:
                from .tasks import send_status_change_notification
                send_status_change_notification.delay(obj.id, old_status.name, obj.status.name)
        else:
            super().save_model(request, obj, form, change)
